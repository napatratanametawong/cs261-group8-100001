services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-CU16-ubuntu-22.04
    container_name: booking-mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD:?set SA_PASSWORD in .env}
      - MSSQL_PID=Developer
    ports:
      - "11433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    restart: unless-stopped

  db-init:
    image: mcr.microsoft.com/mssql-tools:latest
    depends_on:
      mssql:
        condition: service_started   # ไม่อ้าง healthy อีกต่อไป
    env_file: [.env]
    volumes:
      - ./docker/sql:/sql:ro
    entrypoint: ["/bin/sh","-lc"]
    command: >
      set -e;
      echo "== waiting for SQL Server on mssql:1433 ==";
      for i in $(seq 1 120); do
        /opt/mssql-tools/bin/sqlcmd -S mssql,1433 -U sa -P "${SA_PASSWORD}" -Q "SELECT 1" -l 2 && break;
        echo "waiting... ($i/120)"; sleep 2;
      done;
      echo "== running 00_init.sql ==";
      /opt/mssql-tools/bin/sqlcmd -S mssql,1433 -U sa -P "${SA_PASSWORD}" -d master -b -V16 -i /sql/00_init.sql;
      echo "DB init done.";
    restart: "no"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: booking-app
    env_file: [.env]
    environment:
      SPRING_PROFILES_ACTIVE: "${SPRING_PROFILES_ACTIVE}"
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL}"
      SPRING_DATASOURCE_USERNAME: "${SPRING_DATASOURCE_USERNAME}"
      SPRING_DATASOURCE_PASSWORD: "${SPRING_DATASOURCE_PASSWORD}"
      SPRING_MAIL_HOST: "${SPRING_MAIL_HOST}"
      SPRING_MAIL_PORT: "${SPRING_MAIL_PORT}"
      SPRING_MAIL_USERNAME: "${SPRING_MAIL_USERNAME}"
      SPRING_MAIL_PASSWORD: "${SPRING_MAIL_PASSWORD}"
      APP_ADMIN_EMAILS: "${APP_ADMIN_EMAILS}"
      APP_OTP_TTL_SECONDS: "${APP_OTP_TTL_SECONDS}"
      APP_OTP_COOLDOWN: "${APP_OTP_COOLDOWN}"
      APP_JWT_SECRET: "${APP_JWT_SECRET}"
      APP_JWT_EXPIRY: "${APP_JWT_EXPIRY}"
      APP_TU_BASE_URL: "${APP_TU_BASE_URL}"
      APP_TU_APPLICATION_KEY: "${APP_TU_APPLICATION_KEY}"
      JAVA_TOOL_OPTIONS: >-
        -Djdk.tls.client.protocols=TLSv1.2
        -Dhttps.protocols=TLSv1.2
    depends_on:
      mssql:
        condition: service_started
      db-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  mssql_data:
